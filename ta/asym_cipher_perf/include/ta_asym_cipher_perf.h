/* SPDX-License-Identifier: BSD-2-Clause */
/*
 * Copyright (c) 2015, Linaro Limited
 * All rights reserved.
 */

#ifndef TA_ASYM_CIPHER_PERF_H
#define TA_ASYM_CIPHER_PERF_H

#define TA_ASYM_CIPHER_PERF_UUID { 0xb448fcc1, 0xba8c, 0x4132, \
 { 0x9a, 0xcf, 0x2e, 0x05, 0x65, 0x44, 0xf3, 0xc8 } }

/*
 * Commands implemented by the TA
 */

#define TA_ASYM_CIPHER_PERF_CMD_PREPARE_OBJ 0
#define TA_ASYM_CIPHER_PERF_CMD_PREPARE_HASH 1
#define TA_ASYM_CIPHER_PERF_CMD_PREPARE_KEYPAIR 2
#define TA_ASYM_CIPHER_PERF_CMD_PREPARE_ENC_SIGN 3
#define TA_ASYM_CIPHER_PERF_CMD_PROCESS_GEN_KEYPAIR 4
#define TA_ASYM_CIPHER_PERF_CMD_PROCESS 5

#define PKCS_V1_5_MIN 11
#define BITS_TO_BYTES(len) (((len) + 7) / 8)
#define OAEP_HASH_LEN(hsz) ((hsz) * 2)
#define OAEP_OTHER_LEN 2
#define PSS_OTHER_LEN 2

#define DERCODE_SHA1_LEN 15
#define DERCODE_SHA_LEN 19
#define SHA1_LEN 20
#define SHA224_LEN 28
#define SHA256_LEN 32
#define SHA384_LEN 48
#define SHA512_LEN 64
#define WIDTH_BITS_25519 256

#define DH 1
#define RSA 2
#define ECDSA 3
#define ECDH 4
#define X25519 5

#define ECC_CURVE_192 192
#define ECC_CURVE_224 224
#define ECC_CURVE_256 256
#define ECC_CURVE_384 384
#define ECC_CURVE_521 521

#define TEE_MAX_OUT_SIZE 4096

#define DH_MAX_SIZE 4096
#define DH_G_SIZE 1
typedef enum {
 MODE_ENCRYPT = 0,
 MODE_DECRYPT = 1,
 MODE_SIGN = 2,
 MODE_VERIFY = 3,
 MODE_GENKEYPAIR = 4,
} Asym_Cipher_Mode;

typedef enum {
 RSA_NOPAD = 0,
 RSAES_PKCS1_V1_5 = 1,
 RSAES_PKCS1_OAEP_SHA1 = 2,
 RSAES_PKCS1_OAEP_SHA224 = 3,
 RSAES_PKCS1_OAEP_SHA256 = 4,
 RSAES_PKCS1_OAEP_SHA384 = 5,
 RSAES_PKCS1_OAEP_SHA512 = 6,
} RSA_Cipher_Mode;

typedef enum {
 RSASSA_PKCS1_V1_5_SHA1 = 0,
 RSASSA_PKCS1_V1_5_SHA224 = 1,
 RSASSA_PKCS1_V1_5_SHA256 = 2,
 RSASSA_PKCS1_V1_5_SHA384 = 3,
 RSASSA_PKCS1_V1_5_SHA512 = 4,
 RSASSA_PKCS1_PSS_MGF1_SHA1 = 5,
 RSASSA_PKCS1_PSS_MGF1_SHA224 = 6,
 RSASSA_PKCS1_PSS_MGF1_SHA256 = 7,
 RSASSA_PKCS1_PSS_MGF1_SHA384 = 8,
 RSASSA_PKCS1_PSS_MGF1_SHA512 = 9,
} RSA_Sign_Mode;

#endif /* TA_ASYM_CIPHER_PERF_H */
