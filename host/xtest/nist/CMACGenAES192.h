// SPDX-License-Identifier: BSD-2-Clause
/*
 * Copyright (c) 2023, Linaro Limited
 * All rights reserved.
 */

{ TEE_ALG_AES_CMAC, TEE_TYPE_AES,
/* Key */ (const uint8_t []){0x33, 0x64, 0x16, 0x9e, 0xe0, 0x77, 0xca, 0xfb, 0x9b, 0x15, 0xcb, 0xab, 0xaf, 0xa4, 0xf3, 0xf1, 0xea, 0x13, 0x8b, 0xbc, 0x09, 0x75, 0x64, 0x70, }, 24.0,
0,
/* Msg */ NULL, 0,
/* Mac  */ (const uint8_t []){0x57, 0xaa, 0xb6, 0x46, 0x10, 0x5c, 0x5e, 0x5b, 0x80, 0x21, 0x4b, 0x87, 0xff, 0xfa, 0x38, 0x47, }, 16.0,
false },
{ TEE_ALG_AES_CMAC, TEE_TYPE_AES,
/* Key */ (const uint8_t []){0x30, 0x83, 0x43, 0x08, 0x18, 0x7b, 0x8b, 0xe1, 0xbe, 0x40, 0x5d, 0x4b, 0x27, 0x4d, 0x97, 0xb5, 0xd8, 0xab, 0x71, 0x90, 0x50, 0x64, 0x18, 0x5f, }, 24.0,
0,
/* Msg */ NULL, 0,
/* Mac  */ (const uint8_t []){0xf4, 0x89, 0x13, 0x69, 0x69, 0x1f, 0x03, 0x29, 0xfb, 0x3b, 0x31, 0x60, 0xd1, 0xbc, 0xd7, 0x10, }, 16.0,
false },
{ TEE_ALG_AES_CMAC, TEE_TYPE_AES,
/* Key */ (const uint8_t []){0xb8, 0x22, 0x51, 0x71, 0x36, 0xe9, 0x7e, 0xa5, 0xae, 0x89, 0xc4, 0x9d, 0xa6, 0x42, 0xf5, 0x36, 0x98, 0x77, 0x78, 0x89, 0x45, 0xb1, 0x3f, 0x14, }, 24.0,
0,
/* Msg */ NULL, 0,
/* Mac  */ (const uint8_t []){0xc2, 0xd1, 0x40, 0x41, 0x78, 0x92, 0xda, 0xcb, 0xf0, 0x02, 0x6b, 0x35, 0x55, 0x60, 0x47, 0xcf, }, 16.0,
false },
{ TEE_ALG_AES_CMAC, TEE_TYPE_AES,
/* Key */ (const uint8_t []){0x83, 0xb4, 0xda, 0xe8, 0x2b, 0x50, 0x87, 0x9c, 0x24, 0x64, 0x87, 0x29, 0x12, 0x1b, 0x26, 0x3e, 0x39, 0xb2, 0x7f, 0x1c, 0x29, 0x89, 0x40, 0x47, }, 24.0,
0,
/* Msg */ NULL, 0,
/* Mac  */ (const uint8_t []){0xb0, 0x88, 0xa5, 0x2d, 0x4a, 0x5e, 0xff, 0x37, 0x15, 0x31, 0xea, 0x26, 0xc6, 0x36, 0x2c, 0xf6, }, 16.0,
false },
{ TEE_ALG_AES_CMAC, TEE_TYPE_AES,
/* Key */ (const uint8_t []){0xcd, 0x94, 0x1a, 0x2a, 0x84, 0x87, 0x3c, 0x13, 0x1a, 0x10, 0xfc, 0xff, 0x0f, 0x43, 0x70, 0xbd, 0xc8, 0x7d, 0xcf, 0xb7, 0xd7, 0x9b, 0xd5, 0xc7, }, 24.0,
0,
/* Msg */ NULL, 0,
/* Mac  */ (const uint8_t []){0xab, 0x46, 0xbe, 0xc7, 0x6a, 0x2e, 0x76, 0xca, 0x82, 0x3b, 0x2e, 0x2b, 0x0a, 0x27, 0x23, 0xea, }, 16.0,
false },
{ TEE_ALG_AES_CMAC, TEE_TYPE_AES,
/* Key */ (const uint8_t []){0x6f, 0xd6, 0xaa, 0x04, 0xa1, 0x3b, 0xca, 0xfb, 0xfa, 0xb6, 0x0c, 0x5b, 0xa5, 0x91, 0x21, 0x64, 0xf4, 0xac, 0xff, 0x82, 0xaf, 0x7a, 0xd7, 0x74, }, 24.0,
0,
/* Msg */ NULL, 0,
/* Mac  */ (const uint8_t []){0xd1, 0xe1, 0x7c, 0xf8, 0xed, 0xd7, 0x38, 0xf3, 0x94, 0x81, 0x78, 0xd9, 0xda, 0xaf, 0x14, 0xf7, }, 16.0,
false },
{ TEE_ALG_AES_CMAC, TEE_TYPE_AES,
/* Key */ (const uint8_t []){0xb9, 0xae, 0x55, 0x7c, 0x9d, 0xaa, 0xa4, 0x05, 0xe0, 0x88, 0x57, 0x49, 0x42, 0x16, 0xd1, 0xab, 0xec, 0xe8, 0x2b, 0x73, 0x56, 0xa7, 0x33, 0xc3, }, 24.0,
0,
/* Msg */ NULL, 0,
/* Mac  */ (const uint8_t []){0x5c, 0xad, 0x43, 0x6e, 0xc5, 0x1e, 0x08, 0x0d, 0xf0, 0x56, 0x92, 0x5a, 0xb3, 0xcd, 0x45, 0x89, }, 16.0,
false },
{ TEE_ALG_AES_CMAC, TEE_TYPE_AES,
/* Key */ (const uint8_t []){0x7b, 0x32, 0x39, 0x13, 0x69, 0xaa, 0x4c, 0xa9, 0x75, 0x58, 0x09, 0x5b, 0xe3, 0xc3, 0xec, 0x86, 0x2b, 0xd0, 0x57, 0xce, 0xf1, 0xe3, 0x2d, 0x62, }, 24.0,
0,
/* Msg */ NULL, 0,
/* Mac  */ (const uint8_t []){0xe4, 0xd9, 0x34, 0x0b, 0x03, 0xe6, 0x7d, 0xef, 0xd4, 0x96, 0x9c, 0xc1, 0xed, 0x37, 0x35, 0xe6, }, 16.0,
false },
{ TEE_ALG_AES_CMAC, TEE_TYPE_AES,
/* Key */ (const uint8_t []){0x20, 0x51, 0xaf, 0x34, 0x76, 0x2e, 0xbe, 0x55, 0x6f, 0x72, 0xa5, 0xc6, 0xed, 0xc7, 0x77, 0x1e, 0xb9, 0x24, 0x5f, 0xad, 0x76, 0xf0, 0x34, 0xbe, }, 24.0,
0,
/* Msg */ (const uint8_t []){0xae, 0x8e, 0x93, 0xc9, 0xc9, 0x91, 0xcf, 0x89, 0x6a, 0x49, 0x1a, 0x89, 0x07, 0xdf, 0x4e, 0x4b, 0xe5, 0x18, 0x6a, 0xe4, 0x96, 0xcd, 0x34, 0x0d, 0xc1, 0x9b, 0x23, 0x78, 0x21, 0xdb, 0x7b, 0x60, }, 32.0,
/* Mac  */ (const uint8_t []){0x74, 0xf7, 0x46, 0x08, 0xc0, 0x4f, 0x0f, 0x4e, 0x47, 0xfa, 0x64, 0x04, 0x33, 0xb6, 0xe6, 0xfb, }, 16.0,
false },
{ TEE_ALG_AES_CMAC, TEE_TYPE_AES,
/* Key */ (const uint8_t []){0x45, 0x13, 0xf5, 0x5f, 0x24, 0x3b, 0x70, 0x54, 0x4f, 0xd9, 0x7f, 0xaf, 0xe6, 0x5a, 0x68, 0xed, 0x82, 0xc4, 0xac, 0xdc, 0xc9, 0xf7, 0x39, 0xff, }, 24.0,
0,
/* Msg */ (const uint8_t []){0xbb, 0x52, 0x5c, 0xbd, 0x4c, 0xfe, 0x78, 0x4d, 0x33, 0xc4, 0xfa, 0x8b, 0x6e, 0x75, 0x00, 0x6e, 0x25, 0x69, 0x11, 0xb0, 0x3e, 0xc4, 0x54, 0x2f, 0x2c, 0xf8, 0xff, 0x94, 0x07, 0x8b, 0x13, 0x32, }, 32.0,
/* Mac  */ (const uint8_t []){0x52, 0xd2, 0x39, 0x39, 0xe5, 0x98, 0xa7, 0xe5, 0x54, 0xd3, 0x60, 0x4d, 0xdd, 0xf7, 0x90, 0xb5, }, 16.0,
false },
{ TEE_ALG_AES_CMAC, TEE_TYPE_AES,
/* Key */ (const uint8_t []){0xcd, 0x98, 0x06, 0x78, 0x5d, 0xb2, 0x97, 0x69, 0xde, 0x6f, 0xdf, 0x52, 0x23, 0xe4, 0xf2, 0x08, 0x78, 0xbf, 0x13, 0xcf, 0xe3, 0x7d, 0x1c, 0x2a, }, 24.0,
0,
/* Msg */ (const uint8_t []){0xdf, 0xdd, 0xb7, 0x19, 0xd0, 0x03, 0x98, 0xbf, 0x48, 0xa6, 0xce, 0xfd, 0x27, 0x73, 0x63, 0x89, 0xe6, 0x54, 0xa9, 0x3b, 0x85, 0x95, 0xcd, 0x5a, 0xc4, 0x46, 0xaf, 0x19, 0x96, 0xe0, 0xf1, 0x61, }, 32.0,
/* Mac  */ (const uint8_t []){0x09, 0xc4, 0xd3, 0x37, 0xdb, 0x14, 0x6f, 0x92, 0x0d, 0x93, 0x7e, 0xd2, 0x83, 0xcc, 0x69, 0x44, }, 16.0,
false },
{ TEE_ALG_AES_CMAC, TEE_TYPE_AES,
/* Key */ (const uint8_t []){0x87, 0x59, 0x90, 0x96, 0x75, 0x38, 0x3e, 0xf1, 0x75, 0x3b, 0x65, 0x23, 0x24, 0xa0, 0x23, 0x67, 0x1f, 0x9d, 0x9f, 0xd6, 0x69, 0x3c, 0x90, 0xdd, }, 24.0,
0,
/* Msg */ (const uint8_t []){0x2e, 0x6d, 0x3a, 0xe7, 0x94, 0x9e, 0xbc, 0x61, 0x65, 0xad, 0x4d, 0xb2, 0xa3, 0xa1, 0xa9, 0x39, 0x82, 0xed, 0x46, 0x21, 0xcd, 0x44, 0xda, 0xda, 0x86, 0xae, 0x1d, 0xc9, 0xcd, 0xdc, 0xd0, 0x3e, }, 32.0,
/* Mac  */ (const uint8_t []){0x29, 0x6d, 0x7f, 0x3d, 0x43, 0x2d, 0x49, 0x1f, 0x51, 0x4c, 0x83, 0x6a, 0xce, 0x9a, 0x95, 0x60, }, 16.0,
false },
{ TEE_ALG_AES_CMAC, TEE_TYPE_AES,
/* Key */ (const uint8_t []){0x82, 0xb8, 0xc7, 0x36, 0x03, 0x7c, 0xe2, 0xf2, 0xe8, 0xc3, 0x6a, 0x7b, 0x26, 0xbc, 0xa8, 0x89, 0xe9, 0xf4, 0xc3, 0x33, 0x35, 0x6b, 0x87, 0xaa, }, 24.0,
0,
/* Msg */ (const uint8_t []){0x94, 0x0e, 0xe5, 0x3e, 0x86, 0xea, 0x74, 0x62, 0xe9, 0x92, 0x4a, 0xb4, 0xb3, 0x30, 0xb7, 0xd6, 0x4e, 0x9c, 0x06, 0x7a, 0xf6, 0x2c, 0xff, 0xd2, 0x62, 0xcc, 0xb1, 0x47, 0xa6, 0x51, 0x6e, 0x6e, }, 32.0,
/* Mac  */ (const uint8_t []){0xc1, 0x68, 0xa1, 0x95, 0xc3, 0xca, 0xe1, 0xcf, 0xf5, 0x8a, 0x7e, 0x35, 0x8f, 0x8b, 0xc9, 0x36, }, 16.0,
false },
{ TEE_ALG_AES_CMAC, TEE_TYPE_AES,
/* Key */ (const uint8_t []){0xf6, 0xef, 0x9a, 0xc4, 0xf4, 0xc9, 0xce, 0x1e, 0x43, 0x09, 0xc6, 0x4f, 0xa8, 0x31, 0x8b, 0x89, 0x9f, 0x9b, 0xa2, 0x8e, 0xf2, 0xb9, 0x3d, 0x16, }, 24.0,
0,
/* Msg */ (const uint8_t []){0xd8, 0x0f, 0x90, 0xcb, 0x55, 0xbd, 0x62, 0x07, 0xc6, 0x2e, 0xf9, 0xc3, 0x56, 0x7d, 0x59, 0xfe, 0xcd, 0xd8, 0x45, 0x84, 0x9f, 0x79, 0x60, 0x7b, 0x28, 0xd7, 0x92, 0x38, 0x36, 0x1e, 0xad, 0x57, }, 32.0,
/* Mac  */ (const uint8_t []){0x7c, 0x9f, 0xf4, 0x0d, 0x08, 0xee, 0x17, 0xb1, 0x4e, 0xbe, 0x89, 0xab, 0xe8, 0xcf, 0x92, 0xd3, }, 16.0,
false },
{ TEE_ALG_AES_CMAC, TEE_TYPE_AES,
/* Key */ (const uint8_t []){0xff, 0x38, 0x12, 0xe6, 0x73, 0x23, 0xbe, 0xdb, 0xe8, 0x03, 0xa0, 0xee, 0xc4, 0x78, 0x68, 0x60, 0x4b, 0x81, 0xa7, 0xd0, 0xb9, 0x43, 0x84, 0x16, }, 24.0,
0,
/* Msg */ (const uint8_t []){0x0a, 0x14, 0x23, 0xe2, 0x91, 0xb2, 0xf0, 0xc6, 0x49, 0x9f, 0x2d, 0x40, 0x82, 0x37, 0xd7, 0x2d, 0x3a, 0xd7, 0xe6, 0x74, 0x49, 0x41, 0x23, 0x8b, 0xdb, 0x42, 0x3a, 0x3d, 0x23, 0x92, 0x10, 0xaa, }, 32.0,
/* Mac  */ (const uint8_t []){0x68, 0x64, 0xcb, 0x7f, 0x9a, 0x9c, 0x5f, 0x68, 0x54, 0xa6, 0x97, 0x66, 0x93, 0x09, 0x66, 0x1a, }, 16.0,
false },
{ TEE_ALG_AES_CMAC, TEE_TYPE_AES,
/* Key */ (const uint8_t []){0xe8, 0xe4, 0x77, 0x97, 0x5d, 0x89, 0xc1, 0x53, 0x9e, 0xa7, 0xfa, 0x2a, 0xd3, 0x20, 0x92, 0x9c, 0x09, 0x13, 0x36, 0x76, 0x6e, 0x49, 0xa1, 0x52, }, 24.0,
0,
/* Msg */ (const uint8_t []){0x12, 0x86, 0x51, 0x71, 0xbb, 0x4c, 0xf9, 0xc5, 0x1c, 0x53, 0xa5, 0xbc, 0x80, 0x8c, 0x10, 0x7a, 0x8c, 0xd5, 0x30, 0x68, 0x16, 0x7a, 0xb1, 0xd7, 0x3b, 0xfc, 0xa1, 0xe6, 0xab, 0x11, 0x6d, 0xa5, }, 32.0,
/* Mac  */ (const uint8_t []){0x31, 0x6b, 0x5f, 0x37, 0x85, 0x9c, 0xa7, 0x50, 0x8d, 0x5b, 0xc5, 0xf9, 0x89, 0xa3, 0x32, 0x9c, }, 16.0,
false },
{ TEE_ALG_AES_CMAC, TEE_TYPE_AES,
/* Key */ (const uint8_t []){0x50, 0xd0, 0x24, 0xa3, 0xe7, 0x45, 0x5d, 0x72, 0x49, 0xef, 0x2a, 0xe5, 0x9d, 0x2d, 0x00, 0xf1, 0x11, 0x46, 0x9a, 0xaf, 0x6e, 0xab, 0x36, 0xbb, }, 24.0,
0,
/* Msg */ (const uint8_t []){0xb6, 0x21, 0x9c, 0x24, 0x12, 0x67, 0xfa, 0xbe, 0x6b, 0x2e, 0x75, 0x1e, 0x17, 0xff, 0xc3, 0x31, 0x26, 0x3c, 0x0d, 0x8d, 0xa2, 0x56, 0x51, 0x4a, 0x15, 0x41, 0x05, 0x13, 0x4c, 0x25, 0xfd, 0x7c, 0x5b, 0x57, 0x8e, 0x96, 0xe1, 0x87, 0xf4, 0xc2, 0x8d, 0x3b, 0xf1, 0xc2, 0xe1, 0x7c, 0xb7, 0x16, }, 48.0,
/* Mac  */ (const uint8_t []){0xde, 0xda, 0xed, 0x2f, 0xe4, 0x9c, 0xc9, 0xea, 0xd5, 0xb6, 0xc6, 0x22, 0xd5, 0x7a, 0x37, 0xa1, }, 16.0,
false },
{ TEE_ALG_AES_CMAC, TEE_TYPE_AES,
/* Key */ (const uint8_t []){0x31, 0x7a, 0x70, 0x4c, 0xee, 0x13, 0x75, 0x0d, 0x7b, 0x42, 0xaa, 0x6b, 0xa7, 0x29, 0xf7, 0xbf, 0x3c, 0xf9, 0x1a, 0xe0, 0x84, 0x65, 0x48, 0x38, }, 24.0,
0,
/* Msg */ (const uint8_t []){0x02, 0x13, 0xfe, 0x13, 0xc4, 0x90, 0x83, 0xd7, 0xc0, 0x03, 0x35, 0xe1, 0x86, 0x4d, 0xc1, 0x39, 0xc9, 0xe7, 0x12, 0x31, 0x62, 0xd1, 0x71, 0xf9, 0x97, 0xcb, 0xf1, 0x6e, 0x9e, 0xc8, 0x0a, 0x33, 0x5d, 0xa0, 0x84, 0x03, 0x74, 0x05, 0x96, 0x45, 0x7d, 0xb8, 0x50, 0xe1, 0x92, 0xfc, 0x36, 0x53, }, 48.0,
/* Mac  */ (const uint8_t []){0x07, 0x98, 0x24, 0xe1, 0x14, 0x66, 0x82, 0x3d, 0xb9, 0xe2, 0x6a, 0x07, 0x70, 0xf2, 0x8a, 0x40, }, 16.0,
false },
{ TEE_ALG_AES_CMAC, TEE_TYPE_AES,
/* Key */ (const uint8_t []){0x10, 0x53, 0x58, 0xcc, 0x17, 0xb1, 0x21, 0x07, 0xe0, 0x23, 0xa2, 0x3d, 0x57, 0xb4, 0x4c, 0x66, 0xa2, 0xc5, 0x8d, 0x8d, 0xb0, 0x51, 0x00, 0x31, }, 24.0,
0,
/* Msg */ (const uint8_t []){0xa4, 0x2a, 0x2b, 0x1e, 0x50, 0xcb, 0x96, 0x2f, 0x67, 0xe8, 0x57, 0xe5, 0xa1, 0x6b, 0x80, 0x94, 0x4e, 0x71, 0x8a, 0x69, 0x3c, 0x9f, 0x51, 0x59, 0xdb, 0xb9, 0x60, 0x57, 0x9f, 0x70, 0x6f, 0xca, 0xa6, 0x7c, 0x2a, 0x3e, 0x9b, 0xeb, 0x34, 0x59, 0xda, 0xb9, 0x6c, 0x11, 0xd4, 0xa0, 0x6f, 0x1d, }, 48.0,
/* Mac  */ (const uint8_t []){0x57, 0x69, 0xc6, 0x5b, 0x91, 0xd0, 0x10, 0x67, 0x3c, 0xd9, 0xfa, 0x8b, 0x7a, 0x52, 0xe7, 0x0f, }, 16.0,
false },
{ TEE_ALG_AES_CMAC, TEE_TYPE_AES,
/* Key */ (const uint8_t []){0x8e, 0x9e, 0x60, 0x35, 0x95, 0x48, 0x6c, 0x38, 0x55, 0xef, 0x03, 0x0c, 0x4e, 0xe2, 0xce, 0x08, 0x8f, 0xc8, 0x62, 0xb6, 0x84, 0x29, 0xb9, 0x7c, }, 24.0,
0,
/* Msg */ (const uint8_t []){0x1b, 0x0c, 0x9a, 0xc2, 0x01, 0x8f, 0xb3, 0xce, 0x17, 0xda, 0x6a, 0x20, 0xfb, 0xe6, 0x62, 0x20, 0x80, 0x05, 0x38, 0x49, 0x49, 0x23, 0xb6, 0x89, 0x97, 0x4b, 0x4a, 0xeb, 0x5f, 0x6d, 0xb6, 0x73, 0xa0, 0x5e, 0x08, 0x49, 0xf3, 0x20, 0xcd, 0x1b, 0x64, 0x64, 0x82, 0xbc, 0x80, 0x4d, 0x4b, 0x11, }, 48.0,
/* Mac  */ (const uint8_t []){0x43, 0x9c, 0x5c, 0x92, 0x9e, 0x5b, 0x80, 0xe0, 0xae, 0x9b, 0x5e, 0x85, 0x78, 0x2b, 0xd5, 0x77, }, 16.0,
false },
{ TEE_ALG_AES_CMAC, TEE_TYPE_AES,
/* Key */ (const uint8_t []){0xa2, 0x06, 0xa1, 0xeb, 0x70, 0xa9, 0xd2, 0x4b, 0xb5, 0xe7, 0x2f, 0x31, 0x4e, 0x7d, 0x91, 0xde, 0x07, 0x4f, 0x59, 0x05, 0x56, 0x53, 0xbd, 0xd2, }, 24.0,
0,
/* Msg */ (const uint8_t []){0xa2, 0x46, 0x66, 0x54, 0x4c, 0x07, 0x1b, 0x86, 0x07, 0x2a, 0xfb, 0x4d, 0xb5, 0x53, 0x23, 0x27, 0x70, 0x88, 0x97, 0xd8, 0x7b, 0x4d, 0xd6, 0xaf, 0x78, 0x0d, 0xb1, 0x0c, 0xdb, 0xbc, 0x5c, 0x1f, 0x9e, 0xbb, 0xc6, 0xf2, 0x37, 0xfc, 0x26, 0xaa, 0xc7, 0x66, 0xd6, 0x0a, 0x94, 0x7b, 0x65, 0x38, }, 48.0,
/* Mac  */ (const uint8_t []){0xe6, 0x90, 0xdf, 0xcb, 0x1c, 0xa7, 0x82, 0xb5, 0xeb, 0x90, 0xd9, 0x6a, 0x16, 0x36, 0x44, 0x7e, }, 16.0,
false },
{ TEE_ALG_AES_CMAC, TEE_TYPE_AES,
/* Key */ (const uint8_t []){0x7c, 0xdc, 0x26, 0xbb, 0x8e, 0x8d, 0x99, 0x0f, 0xcd, 0x68, 0x86, 0x0a, 0xd4, 0xa3, 0x1d, 0xac, 0xf9, 0x53, 0xee, 0xd5, 0xe9, 0x82, 0xac, 0xfe, }, 24.0,
0,
/* Msg */ (const uint8_t []){0x01, 0x6d, 0x04, 0x9f, 0xda, 0x74, 0x73, 0x01, 0xeb, 0xdd, 0xa5, 0x69, 0xf7, 0x2e, 0x91, 0x44, 0xc5, 0xe4, 0x53, 0x8f, 0x72, 0x73, 0x22, 0xf5, 0x0b, 0x88, 0x82, 0x37, 0x5c, 0x91, 0xba, 0xd1, 0x02, 0x7f, 0x89, 0xdb, 0xc8, 0xca, 0x15, 0x2d, 0x30, 0xb6, 0x24, 0xc6, 0x4f, 0xd6, 0x8e, 0x6f, }, 48.0,
/* Mac  */ (const uint8_t []){0x58, 0x53, 0x3e, 0x9f, 0x0c, 0xb9, 0x4d, 0x91, 0x6f, 0x80, 0x54, 0xcf, 0xce, 0x77, 0xbe, 0x43, }, 16.0,
false },
{ TEE_ALG_AES_CMAC, TEE_TYPE_AES,
/* Key */ (const uint8_t []){0xa6, 0xac, 0x56, 0x92, 0xe0, 0xe3, 0x47, 0x41, 0x8c, 0xf3, 0x18, 0x0c, 0xba, 0xff, 0x73, 0xbe, 0x98, 0xcc, 0x16, 0xf1, 0xe5, 0x6b, 0xe2, 0xd4, }, 24.0,
0,
/* Msg */ (const uint8_t []){0x0c, 0xfc, 0xd5, 0xf9, 0x6d, 0xa1, 0xc6, 0xc6, 0x6c, 0xbd, 0x6c, 0x2a, 0x82, 0xf0, 0xb6, 0xe5, 0xc7, 0x01, 0x1d, 0x1d, 0x16, 0x75, 0xe5, 0x98, 0x6b, 0x61, 0xa0, 0x2e, 0x8f, 0x7c, 0xf5, 0x7e, 0xf8, 0x78, 0x9f, 0xe1, 0xea, 0x93, 0xb8, 0x9c, 0xe3, 0x69, 0x38, 0x5a, 0x36, 0x0c, 0xb9, 0xd9, }, 48.0,
/* Mac  */ (const uint8_t []){0xda, 0x6e, 0x08, 0xee, 0xd7, 0xf5, 0xf5, 0xae, 0x50, 0x9e, 0xc3, 0x2f, 0x62, 0x79, 0x49, 0x7e, }, 16.0,
false },
{ TEE_ALG_AES_CMAC, TEE_TYPE_AES,
/* Key */ (const uint8_t []){0x64, 0x7a, 0x16, 0x15, 0x52, 0xdd, 0xa7, 0x75, 0x3a, 0x54, 0xfb, 0x96, 0xbf, 0x42, 0xf3, 0xa3, 0xf8, 0xb6, 0x76, 0xb7, 0x21, 0x4c, 0xc4, 0xe6, }, 24.0,
0,
/* Msg */ (const uint8_t []){0x0d, 0x73, 0x7f, 0x50, 0xed, 0x19, 0x01, 0xb5, 0x44, 0xc4, 0x2a, 0xf8, 0x80, 0x3e, 0x72, 0x44, 0x74, 0x1e, 0xdf, 0x14, 0xfb, 0xe1, 0xcb, 0xeb, 0xdf, 0x3c, 0xe9, 0x46, 0xf9, 0xb1, 0x83, 0xce, 0x99, 0x61, 0x05, 0xd3, 0x28, 0x21, 0xbf, 0xf6, 0x0b, 0xcf, 0xe7, 0x25, 0xcb, 0xe7, 0xdd, 0xcd, }, 48.0,
/* Mac  */ (const uint8_t []){0x36, 0x3f, 0x13, 0x6d, 0x53, 0xff, 0x69, 0xbe, 0x32, 0xa8, 0x81, 0xc8, 0xba, 0x87, 0x23, 0x30, }, 16.0,
false },
{ TEE_ALG_AES_CMAC, TEE_TYPE_AES,
/* Key */ (const uint8_t []){0x11, 0x59, 0xf3, 0x81, 0xb1, 0xc2, 0x1e, 0x0d, 0x28, 0x53, 0xcb, 0x29, 0xac, 0x79, 0x81, 0xce, 0xa9, 0x02, 0xa9, 0x54, 0x64, 0x2f, 0x4c, 0x2a, }, 24.0,
0,
/* Msg */ (const uint8_t []){0x59, 0x39, 0x7e, 0x76, 0xe7, 0x77, 0x50, 0x9d, 0xdb, 0xa4, 0xf1, 0x81, 0x1a, 0x5e, 0x99, 0x49, 0xc7, 0x92, 0x8d, 0xf3, 0x6f, 0xe5, 0xf4, 0xe0, 0x83, 0x53, 0xe6, 0x93, 0x0c, 0x16, 0xc7, 0xb6, 0x9a, 0xca, 0xd3, 0x5d, 0x7d, 0xce, 0xf9, 0x8f, 0x38, 0xed, 0xed, 0x03, 0x33, 0x3e, 0x79, 0x27, 0xb0, 0x48, }, 50.0,
/* Mac  */ (const uint8_t []){0x35, 0x1b, 0xdc, 0xb8, 0x58, 0xf7, 0xdb, 0xcf, 0x66, 0xb1, 0xa1, 0x30, 0xc2, 0x2e, 0x7c, 0xde, }, 16.0,
false },
{ TEE_ALG_AES_CMAC, TEE_TYPE_AES,
/* Key */ (const uint8_t []){0x1f, 0xe8, 0x80, 0x0f, 0xcb, 0x0d, 0xd8, 0xf1, 0xab, 0x1a, 0xeb, 0x4e, 0x15, 0x9e, 0x57, 0x5a, 0x39, 0x99, 0x72, 0x2b, 0xa7, 0xec, 0xe6, 0xcb, }, 24.0,
0,
/* Msg */ (const uint8_t []){0x93, 0x4e, 0xa4, 0xc1, 0x00, 0xad, 0xdb, 0x64, 0x7c, 0x4a, 0x0d, 0xeb, 0xcc, 0xe7, 0xca, 0x38, 0x9c, 0x95, 0xb0, 0x00, 0x1e, 0xc7, 0x30, 0x7b, 0xf4, 0xaa, 0x95, 0x60, 0x50, 0xb9, 0x41, 0x10, 0x5a, 0x8c, 0x3a, 0x11, 0xd2, 0xf0, 0xe6, 0xbf, 0xf6, 0x3d, 0x13, 0x3e, 0xa6, 0xe4, 0x3a, 0xb3, 0xc6, 0x48, }, 50.0,
/* Mac  */ (const uint8_t []){0x3d, 0x05, 0xc0, 0xd6, 0xe1, 0x4e, 0x06, 0xf5, 0x4b, 0x7e, 0xb4, 0x21, 0x17, 0x5b, 0x1f, 0xd0, }, 16.0,
false },
{ TEE_ALG_AES_CMAC, TEE_TYPE_AES,
/* Key */ (const uint8_t []){0xc2, 0x18, 0xa9, 0x69, 0x3b, 0x3f, 0xb6, 0xf8, 0xb3, 0xb2, 0x13, 0x02, 0x70, 0x27, 0xea, 0x1b, 0x88, 0xf4, 0x89, 0x69, 0x5b, 0x82, 0x09, 0xb4, }, 24.0,
0,
/* Msg */ (const uint8_t []){0x0e, 0x6c, 0x9f, 0xce, 0xd8, 0x26, 0x69, 0xcf, 0xfe, 0x7b, 0x5a, 0x6f, 0x09, 0xdc, 0xee, 0xc8, 0xf9, 0x5b, 0xc3, 0x97, 0xe7, 0xbd, 0x55, 0xf0, 0xe9, 0xd1, 0x0c, 0x30, 0x36, 0x01, 0x7a, 0x34, 0x8b, 0x27, 0xdd, 0xc8, 0xcd, 0xa2, 0xec, 0x62, 0xef, 0xa8, 0xd0, 0x11, 0x16, 0xdd, 0x70, 0xb0, 0xfb, 0x25, }, 50.0,
/* Mac  */ (const uint8_t []){0x64, 0x3b, 0xbd, 0x26, 0x2b, 0xe4, 0x36, 0x55, 0x39, 0x2f, 0x68, 0x57, 0x18, 0xc9, 0xae, 0x43, }, 16.0,
false },
{ TEE_ALG_AES_CMAC, TEE_TYPE_AES,
/* Key */ (const uint8_t []){0x90, 0x84, 0x1f, 0x19, 0x36, 0x6f, 0x06, 0xa9, 0xf6, 0x23, 0x55, 0xc0, 0xeb, 0xda, 0xab, 0x8e, 0x52, 0x71, 0xc1, 0xf9, 0x49, 0x1c, 0x4c, 0xf1, }, 24.0,
0,
/* Msg */ (const uint8_t []){0x57, 0xd9, 0x22, 0x07, 0x8c, 0x10, 0x3f, 0xae, 0xdf, 0x7f, 0xf4, 0xca, 0x1c, 0x57, 0xfe, 0x32, 0x8c, 0x4c, 0x95, 0x53, 0xbc, 0x46, 0x4b, 0x80, 0x7f, 0x59, 0x38, 0x8a, 0x36, 0xf7, 0x54, 0x91, 0x4f, 0x64, 0x24, 0x19, 0x0c, 0x6b, 0x99, 0x60, 0x86, 0x50, 0x35, 0xf0, 0xf1, 0x05, 0x6f, 0x70, 0x21, 0xa0, }, 50.0,
/* Mac  */ (const uint8_t []){0x1a, 0x0f, 0xc6, 0x6c, 0xc8, 0x60, 0x5d, 0x7b, 0xc9, 0x56, 0x25, 0x3a, 0x42, 0xac, 0x73, 0x65, }, 16.0,
false },
{ TEE_ALG_AES_CMAC, TEE_TYPE_AES,
/* Key */ (const uint8_t []){0x81, 0x3e, 0x2a, 0xab, 0x49, 0x3d, 0x6b, 0x74, 0x8e, 0xd2, 0xbf, 0x77, 0xc5, 0xae, 0xeb, 0xf8, 0x71, 0x56, 0x2a, 0xd7, 0x47, 0xbe, 0x71, 0xbf, }, 24.0,
0,
/* Msg */ (const uint8_t []){0x33, 0x84, 0xf8, 0x56, 0x3c, 0xfd, 0x0f, 0xc8, 0x01, 0x9b, 0xac, 0xc9, 0xb6, 0x91, 0xc9, 0xba, 0x4a, 0xe6, 0xdc, 0x8c, 0xf4, 0xc0, 0x06, 0x29, 0x0f, 0xe1, 0x8d, 0x0f, 0x27, 0x72, 0x8c, 0x3e, 0x54, 0xff, 0xe9, 0x55, 0xc6, 0xc4, 0x88, 0xf8, 0xa2, 0x27, 0xbe, 0x74, 0x0d, 0x85, 0x09, 0xa6, 0x85, 0x31, }, 50.0,
/* Mac  */ (const uint8_t []){0xa9, 0x06, 0xf4, 0x65, 0x09, 0x96, 0x5a, 0x3a, 0x35, 0x35, 0x01, 0xa1, 0x45, 0x0b, 0x59, 0xf7, }, 16.0,
false },
{ TEE_ALG_AES_CMAC, TEE_TYPE_AES,
/* Key */ (const uint8_t []){0x84, 0xad, 0xfa, 0x66, 0x16, 0x5d, 0xef, 0xb6, 0xde, 0x1b, 0xb7, 0xa0, 0x9a, 0xb9, 0xa3, 0xc3, 0xbe, 0xef, 0x63, 0x9f, 0x15, 0x66, 0xca, 0x4c, }, 24.0,
0,
/* Msg */ (const uint8_t []){0xca, 0x58, 0x93, 0xa1, 0xe5, 0xc0, 0x6b, 0x21, 0x8d, 0x91, 0xd8, 0x7d, 0xd4, 0xe8, 0x92, 0x59, 0x62, 0x1d, 0x9c, 0x7f, 0x66, 0xec, 0xd3, 0x24, 0xd3, 0xd7, 0xc8, 0x6d, 0xc8, 0xc6, 0xcb, 0x31, 0x4f, 0xf1, 0x48, 0x01, 0x4b, 0xff, 0x57, 0x65, 0xac, 0x6f, 0x8e, 0x69, 0xe5, 0x38, 0x19, 0x58, 0xa0, 0xac, }, 50.0,
/* Mac  */ (const uint8_t []){0x7a, 0x40, 0x1f, 0x27, 0x99, 0x6c, 0xb8, 0x68, 0xc7, 0x6e, 0x9d, 0x3d, 0x76, 0x36, 0xc5, 0xf4, }, 16.0,
false },
{ TEE_ALG_AES_CMAC, TEE_TYPE_AES,
/* Key */ (const uint8_t []){0x22, 0xb7, 0xf1, 0x05, 0x6e, 0x76, 0x07, 0x03, 0xf5, 0xa1, 0x86, 0xcc, 0x0b, 0x4d, 0xf8, 0x4f, 0x33, 0xff, 0xa5, 0x49, 0x88, 0x78, 0x11, 0xb9, }, 24.0,
0,
/* Msg */ (const uint8_t []){0xde, 0xee, 0x25, 0x7f, 0xdf, 0x21, 0x29, 0xd9, 0xde, 0x3e, 0xbf, 0x8a, 0xb0, 0x58, 0x01, 0x55, 0xdd, 0x67, 0x55, 0x16, 0xa4, 0x3d, 0x95, 0x52, 0x3f, 0xbc, 0x6d, 0x12, 0x68, 0x45, 0x04, 0xf2, 0x1b, 0x73, 0xde, 0x75, 0x9e, 0x0a, 0x01, 0x9b, 0xbf, 0x2a, 0x56, 0xb6, 0x5d, 0xc9, 0x53, 0x79, 0x29, 0x60, }, 50.0,
/* Mac  */ (const uint8_t []){0x8b, 0x16, 0xdc, 0x6d, 0x01, 0x59, 0x11, 0x56, 0x18, 0xc4, 0x8a, 0x50, 0x7a, 0x37, 0x2b, 0xdc, }, 16.0,
false },
{ TEE_ALG_AES_CMAC, TEE_TYPE_AES,
/* Key */ (const uint8_t []){0xb4, 0x1c, 0xfb, 0x88, 0x16, 0xb9, 0x1b, 0x80, 0x64, 0x73, 0x42, 0x4e, 0x73, 0x1a, 0x0f, 0xe2, 0x03, 0xbf, 0x5e, 0x79, 0xf2, 0x19, 0x1c, 0x1c, }, 24.0,
0,
/* Msg */ (const uint8_t []){0x27, 0xca, 0xbc, 0x40, 0xda, 0x0e, 0x1e, 0xda, 0x0e, 0xa5, 0xf8, 0xab, 0xbb, 0x7c, 0x17, 0x9e, 0x30, 0x77, 0x62, 0x50, 0xa7, 0xb3, 0x0d, 0x71, 0x1b, 0x0e, 0x10, 0x6c, 0x5e, 0xe9, 0xd8, 0x4a, 0x66, 0x2c, 0x3c, 0xd3, 0xe7, 0x8b, 0xb2, 0xf7, 0x28, 0x08, 0xc3, 0x6d, 0x0f, 0xb9, 0xbc, 0x9a, 0x7d, 0xcc, }, 50.0,
/* Mac  */ (const uint8_t []){0x8b, 0xca, 0x66, 0x65, 0x1d, 0xa0, 0xdd, 0x40, 0x86, 0x77, 0x49, 0x41, 0xb8, 0x14, 0xaa, 0x91, }, 16.0,
false },
{ TEE_ALG_AES_CMAC, TEE_TYPE_AES,
/* Key */ (const uint8_t []){0x1d, 0x67, 0x4e, 0xb5, 0xd8, 0x59, 0x45, 0xa6, 0xc7, 0x84, 0x20, 0x42, 0xad, 0xeb, 0xe5, 0x49, 0xd4, 0xfe, 0x51, 0x55, 0x01, 0xc0, 0x6c, 0x1b, }, 24.0,
0,
/* Msg */ (const uint8_t []){0xa1, 0x20, 0xe2, 0x0c, 0xa9, 0x2f, 0x79, 0x39, 0x8e, 0x7e, 0xd2, 0x9d, 0x57, 0x87, 0xcf, 0xa0, 0x9b, 0x15, 0x5d, 0x90, 0x42, 0xfb, 0x54, 0xf1, 0x8f, 0x05, 0x9f, 0x14, 0x5f, 0x2f, 0x9c, 0xeb, 0xab, 0x15, 0xc5, 0x1b, 0x54, 0xab, 0x91, 0x53, 0x20, 0x2e, 0x95, 0xdc, 0xff, 0x5a, 0xef, 0x72, 0x94, 0xde, 0xe4, 0x53, }, 52.0,
/* Mac  */ (const uint8_t []){0x84, 0x92, 0xb0, 0x30, 0x4e, 0xf4, 0x4f, 0x11, 0x66, 0x18, 0x5c, 0x8c, 0xd7, 0x08, 0xf4, 0xb8, }, 16.0,
false },
{ TEE_ALG_AES_CMAC, TEE_TYPE_AES,
/* Key */ (const uint8_t []){0xf6, 0x80, 0x85, 0x3d, 0xac, 0xc7, 0xb0, 0xfc, 0xf4, 0xa7, 0x27, 0x89, 0xb0, 0x89, 0x84, 0xab, 0xdf, 0x7c, 0x67, 0x10, 0xc4, 0xcc, 0xbb, 0x88, }, 24.0,
0,
/* Msg */ (const uint8_t []){0x37, 0xb7, 0xac, 0x22, 0xb1, 0x5b, 0xca, 0xe6, 0x4b, 0x1b, 0x1e, 0x6c, 0x70, 0xc7, 0x07, 0x28, 0x14, 0x94, 0xb8, 0x14, 0x98, 0x6f, 0x38, 0xa6, 0xee, 0x90, 0xac, 0xff, 0xfd, 0x51, 0xd9, 0x65, 0x47, 0x41, 0xe5, 0xf3, 0xc9, 0x74, 0x5d, 0x8f, 0x22, 0x1e, 0x7d, 0x1d, 0xf8, 0x60, 0xab, 0xf2, 0x98, 0x62, 0x44, 0x8c, }, 52.0,
/* Mac  */ (const uint8_t []){0xf9, 0x0e, 0x54, 0xcf, 0x73, 0x86, 0xb7, 0xeb, 0xf1, 0xd3, 0xd3, 0x67, 0xd0, 0x77, 0x5e, 0xd3, }, 16.0,
false },
{ TEE_ALG_AES_CMAC, TEE_TYPE_AES,
/* Key */ (const uint8_t []){0xa4, 0xa8, 0xb5, 0xf7, 0xe3, 0x35, 0x69, 0x04, 0x85, 0x39, 0xe5, 0x3b, 0x16, 0x1a, 0xbf, 0x6f, 0x75, 0x50, 0x67, 0xdd, 0x36, 0x2e, 0xae, 0xa7, }, 24.0,
0,
/* Msg */ (const uint8_t []){0x94, 0x7c, 0x01, 0xab, 0x30, 0x89, 0x74, 0xbd, 0xf6, 0x7f, 0xf2, 0x5f, 0xfa, 0xf8, 0x3d, 0x9c, 0x28, 0xfa, 0xd4, 0x45, 0x20, 0x78, 0x6a, 0x94, 0x44, 0x1b, 0x96, 0x10, 0x0e, 0x42, 0xcc, 0xb0, 0xa8, 0x47, 0x8c, 0x43, 0xb6, 0x04, 0xd9, 0x0f, 0x76, 0x95, 0xed, 0xb9, 0x0c, 0x60, 0x2b, 0x65, 0x17, 0x53, 0x55, 0x1d, }, 52.0,
/* Mac  */ (const uint8_t []){0x5a, 0x0d, 0xce, 0x29, 0x98, 0x5f, 0x07, 0xcd, 0xdf, 0xa4, 0x3c, 0x1b, 0x11, 0x8c, 0xd7, 0xfc, }, 16.0,
false },
{ TEE_ALG_AES_CMAC, TEE_TYPE_AES,
/* Key */ (const uint8_t []){0xb1, 0x11, 0xbe, 0x3d, 0x59, 0xa8, 0x80, 0x9c, 0x8f, 0x54, 0xdb, 0xb0, 0x21, 0x73, 0x42, 0x74, 0x2f, 0x74, 0xf7, 0x6c, 0x40, 0x99, 0xc5, 0x89, }, 24.0,
0,
/* Msg */ (const uint8_t []){0xea, 0xe8, 0x1f, 0x13, 0xe1, 0x25, 0x40, 0x6a, 0xea, 0x22, 0x41, 0xc0, 0x1e, 0x22, 0xaa, 0x8a, 0xef, 0x61, 0x16, 0x09, 0x69, 0x4b, 0x94, 0x20, 0xb8, 0xec, 0x4c, 0x63, 0xe9, 0xa8, 0x66, 0x70, 0xf5, 0x2c, 0x27, 0x82, 0xfb, 0xa4, 0x5d, 0x43, 0xcd, 0x2e, 0xfe, 0xe2, 0xae, 0x8f, 0x0c, 0x66, 0x5a, 0x26, 0xbb, 0x42, }, 52.0,
/* Mac  */ (const uint8_t []){0x84, 0x16, 0x52, 0x01, 0x21, 0xff, 0xdf, 0x5e, 0x01, 0xdb, 0xa3, 0x76, 0x80, 0x01, 0xef, 0xa0, }, 16.0,
false },
{ TEE_ALG_AES_CMAC, TEE_TYPE_AES,
/* Key */ (const uint8_t []){0xf8, 0x00, 0xbd, 0x78, 0x27, 0x69, 0xe3, 0x20, 0x1d, 0xfd, 0x06, 0x5a, 0xc0, 0x5a, 0x5b, 0x5a, 0x08, 0xe8, 0xb9, 0x65, 0xb5, 0xbc, 0xf3, 0xd8, }, 24.0,
0,
/* Msg */ (const uint8_t []){0x54, 0x8e, 0x21, 0x52, 0xf3, 0xa1, 0x5b, 0x8f, 0xb8, 0x1d, 0xc0, 0x10, 0x62, 0xd9, 0x9f, 0x7b, 0x4f, 0xc8, 0xf0, 0x74, 0xe5, 0xcb, 0xdc, 0x10, 0x30, 0xc9, 0x7f, 0x8c, 0xcc, 0x02, 0xec, 0x3f, 0x06, 0xa0, 0x71, 0xcd, 0x3e, 0x8f, 0x1d, 0x9e, 0x90, 0x8f, 0x80, 0x8e, 0xb3, 0x88, 0xb2, 0xe6, 0x20, 0x1d, 0x97, 0x8c, }, 52.0,
/* Mac  */ (const uint8_t []){0xa8, 0xf8, 0x35, 0x74, 0xa2, 0x07, 0xee, 0x91, 0x63, 0x86, 0x96, 0xa2, 0x5a, 0xed, 0x15, 0x4a, }, 16.0,
false },
{ TEE_ALG_AES_CMAC, TEE_TYPE_AES,
/* Key */ (const uint8_t []){0x7c, 0xec, 0x94, 0x21, 0x9e, 0xab, 0x2a, 0x29, 0x63, 0x01, 0x77, 0x97, 0x5d, 0x88, 0xbb, 0x78, 0xf1, 0x66, 0x9b, 0xb0, 0x08, 0x2b, 0x73, 0xf6, }, 24.0,
0,
/* Msg */ (const uint8_t []){0x3a, 0x75, 0xaf, 0xb2, 0x45, 0xa6, 0x68, 0xdd, 0xff, 0x0a, 0xc8, 0x5d, 0xdd, 0x91, 0x0a, 0x51, 0x17, 0xe7, 0x3e, 0x58, 0x5a, 0x53, 0x9b, 0x9c, 0xbe, 0xdf, 0x16, 0x0f, 0xf7, 0xb9, 0x34, 0xf4, 0xcf, 0xd9, 0x1c, 0xa2, 0xd4, 0xe4, 0xf0, 0x84, 0x4d, 0x50, 0x5d, 0x65, 0x73, 0xca, 0x71, 0xea, 0xde, 0xd4, 0xad, 0x60, }, 52.0,
/* Mac  */ (const uint8_t []){0x47, 0x4e, 0xd0, 0xc9, 0x8c, 0x4f, 0xf0, 0x8a, 0xc3, 0xab, 0x80, 0xff, 0x9a, 0x2e, 0xf5, 0x3a, }, 16.0,
false },
{ TEE_ALG_AES_CMAC, TEE_TYPE_AES,
/* Key */ (const uint8_t []){0x22, 0x8a, 0x8e, 0x3c, 0xb6, 0xab, 0xce, 0xd1, 0x36, 0xac, 0x8d, 0x93, 0x35, 0x1f, 0x21, 0x4c, 0xe3, 0xc8, 0x4f, 0x84, 0x3b, 0x02, 0x19, 0xff, }, 24.0,
0,
/* Msg */ (const uint8_t []){0x53, 0x94, 0x07, 0xbb, 0x69, 0x30, 0xd5, 0xad, 0xbd, 0xf1, 0x9a, 0x7e, 0x28, 0x5b, 0xa1, 0xde, 0xe5, 0xca, 0xa0, 0x3e, 0xf5, 0x4e, 0x3a, 0x3f, 0xc1, 0xb8, 0xc8, 0x6a, 0x02, 0xf5, 0x59, 0x21, 0xde, 0x9b, 0xf7, 0xd5, 0x53, 0xc2, 0x2d, 0x7a, 0xd9, 0x15, 0xc6, 0x38, 0x43, 0x29, 0xd6, 0x64, 0xe7, 0x0d, 0xff, 0xae, }, 52.0,
/* Mac  */ (const uint8_t []){0x41, 0xb8, 0xbb, 0x63, 0x18, 0xf9, 0xa3, 0x03, 0x79, 0x38, 0x20, 0x59, 0x7d, 0x26, 0x7c, 0xb3, }, 16.0,
false },
{ TEE_ALG_AES_CMAC, TEE_TYPE_AES,
/* Key */ (const uint8_t []){0x87, 0x59, 0x90, 0x96, 0x75, 0x38, 0x3e, 0xf1, 0x75, 0x3b, 0x65, 0x23, 0x24, 0xa0, 0x23, 0x67, 0x1f, 0x9d, 0x9f, 0xd6, 0x69, 0x3c, 0x90, 0xdd, }, 24.0,
0,
/* Msg */ (const uint8_t []){0x2e, 0x6d, 0x3a, 0xe7, 0x94, 0x9e, 0xbc, 0x61, 0x65, 0xad, 0x4d, 0xb2, 0xa3, 0xa1, 0xa9, 0x39, 0x82, 0xed, 0x46, 0x21, 0xcd, 0x44, 0xda, 0xda, 0x86, 0xae, 0x1d, 0xc9, 0xcd, 0xdc, 0xd0, 0x3e, 0x02, 0xb8, 0xfe, 0xa7, 0x2e, 0x41, 0x82, 0x04, 0x9f, 0x96, 0xc9, 0x9b, 0xd3, 0x50, 0xd9, 0xed, 0x98, 0x15, 0x92, 0xe8, }, 52.0,
/* Mac  */ (const uint8_t []){0x9c, 0x8a, 0x61, 0x0b, 0x38, 0x2e, 0xe6, 0x55, 0x60, 0x1e, 0xbe, 0xe3, 0x63, 0x3d, 0x9e, 0xf1, }, 16.0,
false },
{ TEE_ALG_AES_CMAC, TEE_TYPE_AES,
/* Key */ (const uint8_t []){0xbe, 0x5e, 0x93, 0x28, 0x81, 0x20, 0x73, 0x58, 0xc3, 0x23, 0x4c, 0x63, 0x18, 0xff, 0x69, 0x3d, 0x35, 0xe3, 0x47, 0x3d, 0xa5, 0x80, 0xec, 0x22, }, 24.0,
0,
/* Msg */ (const uint8_t []){0x8f, 0xf8, 0x21, 0xe9, 0x7c, 0xef, 0x3f, 0xc3, 0x8e, 0x19, 0xe2, 0xb9, 0x51, 0x21, 0x18, 0x6e, 0x6c, 0x63, 0xdc, 0xc1, 0xd3, 0x51, 0xeb, 0x4f, 0x3d, 0x15, 0xd3, 0x38, 0xd9, 0x78, 0x4d, 0x27, 0x3c, 0x02, 0xcc, 0x8c, 0x9e, 0x62, 0x56, 0x2c, 0x47, 0x11, 0x93, 0xdc, 0x44, 0x33, 0x24, 0x89, 0x5e, 0xbe, 0x35, 0x7c, 0x4d, 0xdd, 0x56, 0xdc, 0x28, 0x97, 0x86, 0x75, }, 60.0,
/* Mac  */ (const uint8_t []){0xba, 0x44, 0x5d, 0x3d, 0xd3, 0xfe, 0xb1, 0xae, 0xab, 0x21, 0xd4, 0xfd, 0x99, 0x09, 0x77, 0x52, }, 16.0,
false },
{ TEE_ALG_AES_CMAC, TEE_TYPE_AES,
/* Key */ (const uint8_t []){0x85, 0x98, 0xa0, 0xb2, 0x2e, 0x14, 0x02, 0x45, 0x84, 0x23, 0xe2, 0xc1, 0xfd, 0x33, 0x83, 0xac, 0x16, 0x9b, 0x72, 0xad, 0xea, 0xdb, 0xbb, 0xf0, }, 24.0,
0,
/* Msg */ (const uint8_t []){0xd4, 0xa9, 0xa0, 0x8c, 0xc1, 0xe1, 0x35, 0x4c, 0x42, 0x65, 0xdd, 0x04, 0x51, 0xd1, 0x09, 0x68, 0xa5, 0x93, 0xc5, 0x6b, 0x34, 0x5a, 0x53, 0x56, 0xf7, 0xcc, 0x13, 0x17, 0xed, 0x78, 0xa7, 0xdc, 0x62, 0x0b, 0x53, 0xe1, 0x71, 0xc6, 0xaa, 0x86, 0xc8, 0x2f, 0x67, 0xa5, 0xab, 0x07, 0x99, 0x22, 0x3c, 0x7d, 0x03, 0xc4, 0xf9, 0xa1, 0xc2, 0x43, 0x86, 0x1b, 0x30, 0xa2, }, 60.0,
/* Mac  */ (const uint8_t []){0x0c, 0x9a, 0x2a, 0x91, 0x27, 0xe9, 0x0b, 0x07, 0x68, 0x25, 0x3a, 0xa2, 0xaa, 0xdb, 0x01, 0x4f, }, 16.0,
false },
{ TEE_ALG_AES_CMAC, TEE_TYPE_AES,
/* Key */ (const uint8_t []){0xa5, 0x37, 0xa6, 0x56, 0xfe, 0xcf, 0x2c, 0x1a, 0xf5, 0x62, 0x50, 0x5a, 0x6d, 0x92, 0x38, 0x78, 0xd0, 0x71, 0xc1, 0xad, 0x04, 0xa1, 0x14, 0x4d, }, 24.0,
0,
/* Msg */ (const uint8_t []){0x9e, 0x60, 0xeb, 0x43, 0x00, 0x6f, 0x5c, 0x54, 0xde, 0xdb, 0x46, 0x56, 0xe1, 0xfa, 0xb0, 0xfe, 0x77, 0xd3, 0x9c, 0x19, 0xc7, 0x3a, 0x97, 0xd0, 0xea, 0x3d, 0x8f, 0x2a, 0x58, 0xbf, 0xe5, 0xd2, 0xa0, 0x63, 0xc3, 0x1b, 0x5d, 0xac, 0xb0, 0x41, 0x65, 0x62, 0x61, 0xf2, 0x43, 0x37, 0xd2, 0x0c, 0xe8, 0xaa, 0x96, 0xa9, 0x9d, 0x2c, 0x6c, 0x59, 0x3c, 0x81, 0x12, 0xae, }, 60.0,
/* Mac  */ (const uint8_t []){0x38, 0x82, 0x00, 0x63, 0xae, 0x42, 0x2d, 0x7c, 0xf8, 0xc2, 0x84, 0x77, 0x37, 0xa8, 0xeb, 0x3c, }, 16.0,
false },
{ TEE_ALG_AES_CMAC, TEE_TYPE_AES,
/* Key */ (const uint8_t []){0x43, 0x22, 0xae, 0x7d, 0xea, 0x85, 0xbe, 0xe7, 0x1c, 0xe1, 0x16, 0xdd, 0x86, 0xfe, 0xef, 0xfe, 0x5d, 0x0a, 0x50, 0x88, 0xf5, 0xdf, 0x3d, 0xc0, }, 24.0,
0,
/* Msg */ (const uint8_t []){0x6a, 0x35, 0xdb, 0xc4, 0xa8, 0x90, 0xce, 0x23, 0x28, 0x7e, 0xfd, 0xee, 0xff, 0x90, 0x42, 0xe7, 0xf9, 0x31, 0xf2, 0x60, 0x30, 0xe4, 0x10, 0xa1, 0xdd, 0xcd, 0xc1, 0x8a, 0x6f, 0x73, 0x00, 0x7a, 0xda, 0xc4, 0x93, 0x6f, 0x32, 0x5a, 0x3e, 0x6e, 0x78, 0xfc, 0x36, 0x25, 0xb4, 0x68, 0xd8, 0xcf, 0x43, 0x4f, 0x9b, 0x58, 0x73, 0xa2, 0x44, 0xc1, 0x4d, 0x0c, 0x59, 0xc7, }, 60.0,
/* Mac  */ (const uint8_t []){0xfc, 0xcf, 0x8b, 0x23, 0xa9, 0x97, 0xba, 0xbf, 0xbc, 0x07, 0x32, 0xba, 0x27, 0x6e, 0xb8, 0xa2, }, 16.0,
false },
{ TEE_ALG_AES_CMAC, TEE_TYPE_AES,
/* Key */ (const uint8_t []){0xa1, 0x2a, 0x70, 0xeb, 0xca, 0xad, 0x31, 0x0f, 0x65, 0x02, 0xfe, 0x82, 0xc3, 0x08, 0xcf, 0xa8, 0xc1, 0xf6, 0x8b, 0x1f, 0x9c, 0xe5, 0x7b, 0x5a, }, 24.0,
0,
/* Msg */ (const uint8_t []){0xe1, 0x9a, 0xc0, 0x8a, 0xeb, 0x3c, 0xd7, 0x8e, 0x40, 0x54, 0x8d, 0xb4, 0x3c, 0x5a, 0xca, 0x50, 0xad, 0x78, 0x60, 0xfe, 0x92, 0x3e, 0xef, 0xf0, 0x23, 0x97, 0x06, 0x86, 0x11, 0xfc, 0x8a, 0x1f, 0x0e, 0xe7, 0x5c, 0x30, 0x90, 0x8b, 0x36, 0x93, 0xd2, 0xc2, 0xd6, 0x21, 0x1c, 0x47, 0x5f, 0x82, 0x45, 0x25, 0xfc, 0x44, 0x76, 0x6f, 0xc6, 0x2b, 0x30, 0x32, 0xe8, 0xc8, }, 60.0,
/* Mac  */ (const uint8_t []){0x86, 0xc4, 0x41, 0x50, 0xfe, 0xd8, 0x4d, 0x2e, 0x18, 0x97, 0x66, 0x61, 0x27, 0xe3, 0xb5, 0x6e, }, 16.0,
false },
{ TEE_ALG_AES_CMAC, TEE_TYPE_AES,
/* Key */ (const uint8_t []){0x62, 0xb8, 0x26, 0x3d, 0xc0, 0x15, 0xef, 0x87, 0x3c, 0xd1, 0x62, 0x72, 0xe4, 0xda, 0x89, 0x79, 0x9b, 0x91, 0x0f, 0x2b, 0x04, 0x20, 0x44, 0x20, }, 24.0,
0,
/* Msg */ (const uint8_t []){0x8b, 0x4d, 0x85, 0xd9, 0x95, 0x26, 0x50, 0xae, 0xb2, 0x39, 0x1f, 0x70, 0x1f, 0x1d, 0x34, 0x2b, 0x45, 0xe4, 0x6f, 0x0a, 0x33, 0xb6, 0x67, 0x1d, 0x4c, 0xb8, 0xb9, 0x59, 0x3d, 0x32, 0xa0, 0xe1, 0x33, 0xf2, 0xc6, 0x84, 0x4a, 0xeb, 0x5a, 0x86, 0x48, 0x22, 0x63, 0xa3, 0x8b, 0xcb, 0x54, 0x51, 0x40, 0xae, 0xe0, 0x46, 0xd6, 0xd0, 0x0f, 0x3a, 0xb2, 0x50, 0x92, 0xee, }, 60.0,
/* Mac  */ (const uint8_t []){0xca, 0x55, 0x8a, 0x0b, 0xea, 0x31, 0xff, 0x12, 0x99, 0xee, 0xb9, 0x4b, 0xc0, 0x6c, 0xda, 0x38, }, 16.0,
false },
{ TEE_ALG_AES_CMAC, TEE_TYPE_AES,
/* Key */ (const uint8_t []){0x3d, 0xa1, 0xc7, 0xcf, 0xfa, 0xa1, 0x67, 0x55, 0x7b, 0x25, 0x06, 0x34, 0xe8, 0x05, 0x2f, 0xa0, 0x30, 0xc6, 0x62, 0xe8, 0xfb, 0xbe, 0xab, 0xb3, }, 24.0,
0,
/* Msg */ (const uint8_t []){0xd1, 0xde, 0x1b, 0xe5, 0xf7, 0xa4, 0x61, 0x91, 0xbb, 0x3d, 0x24, 0xd8, 0x6f, 0xc3, 0xea, 0xbd, 0x5b, 0x6f, 0xd6, 0x65, 0x5f, 0xb0, 0x6f, 0xcb, 0xda, 0x7a, 0xa4, 0xb5, 0xca, 0xe1, 0x0c, 0xe7, 0x34, 0xe6, 0x72, 0x96, 0xc6, 0x91, 0x90, 0x1f, 0xbb, 0x40, 0x1b, 0xf9, 0xff, 0x3e, 0x00, 0xe8, 0x93, 0x97, 0xee, 0x74, 0x34, 0x2b, 0x14, 0x9a, 0x37, 0x02, 0x2c, 0xc1, }, 60.0,
/* Mac  */ (const uint8_t []){0xa9, 0x22, 0x6f, 0x20, 0xdb, 0x94, 0x7f, 0x83, 0x5e, 0x85, 0x75, 0x42, 0x1c, 0x05, 0xa2, 0x41, }, 16.0,
false },
{ TEE_ALG_AES_CMAC, TEE_TYPE_AES,
/* Key */ (const uint8_t []){0x01, 0x2d, 0x3f, 0x35, 0xfe, 0x16, 0x2a, 0xc6, 0x99, 0x9a, 0xd8, 0x4d, 0x90, 0x57, 0xff, 0xfb, 0x5c, 0xac, 0x15, 0xbc, 0x4e, 0x78, 0x09, 0x17, }, 24.0,
0,
/* Msg */ (const uint8_t []){0x94, 0x0c, 0xec, 0x23, 0xe8, 0x87, 0x56, 0x9a, 0xa8, 0x1d, 0x54, 0x99, 0x02, 0x50, 0x37, 0xbe, 0x68, 0xdb, 0x9a, 0xc7, 0xf2, 0x8b, 0xe8, 0x06, 0xfd, 0x50, 0x1e, 0x10, 0x19, 0x94, 0xd2, 0xb6, 0x22, 0xcb, 0x75, 0x36, 0xac, 0x4c, 0xd5, 0xb2, 0xa4, 0x5f, 0xe5, 0xe0, 0x35, 0x97, 0xc1, 0x04, 0xe9, 0x62, 0xed, 0x1b, 0x11, 0xde, 0xdd, 0x59, 0x66, 0xee, 0xbb, 0xd6, }, 60.0,
/* Mac  */ (const uint8_t []){0xd1, 0xf9, 0x0c, 0x9f, 0x65, 0x29, 0xdb, 0x7c, 0x7b, 0xfa, 0x8e, 0x79, 0x24, 0x80, 0x59, 0x25, }, 16.0,
false },
